on:
  pull_request:
    types: [opened]
  push:
  schedule:
    - cron: '0 0 * * 1'

jobs:
  default:
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    strategy:
      matrix:
        include:
          # - os: ubuntu-latest
          # - os: macOS-13
          - os: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Extra setup
        shell: bash
        run: ${{ matrix.extrasetup }}
      - uses: ./
      - run: nim -v
      - run: nimble -v
      - name: Test
        run: nim c -r sample.nim

  # Check for tags missing from nightlies.txt
  missing_binary_tags:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: ./getnightlies.sh

  # Compile a list of versions to test with in the next step  
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      nimversions: ${{ steps.set-nim-versions.outputs.NIMVERSIONS }}
    steps:
      - uses: actions/checkout@v1
      - id: set-nim-versions
        run: |
          cat > script.py <<EOF
          import io
          import json
          versions = [
            'stable',
            'binary:stable',
            '2.0',
            'binary:2.0',
            '1.6',
            'binary:1.6',
            '1.4.0',
            'nightly:https://github.com/nim-lang/nightlies/releases/tag/2025-05-13-version-2-2-9cfc3399bc9b7538941ba59803c998cc8fc7a653',
            'sourcetar:https://github.com/nim-lang/nightlies/releases/download/latest-version-1-4/source.tar.xz',
            'release:1.2.8',
            'git:f7145dd26efeeeb6eeae6fff649db244d81b212d',
            'git:v1.4.8',
            'git:v1.6.10',
            'git:f7145dd26efeeeb6eeae6fff649db244d81b212d https://github.com/iffy/Nim.git',
            '0.20.0',
          ]
          with io.open('nightlies.txt', 'r') as fh:
            to_pick = {}
            for line in fh:
              if 'https' in line:
                ver = line.split()[0]
                (maj, min, bug) = ver.split('.')
                # get the latest MAJ.MIN.X version
                to_pick[(maj,min)] = ver
            for key in to_pick:
              tag = 'binary:' + to_pick[key]
              if tag not in versions:
                versions.append(tag)
          print("NIMVERSIONS=" + json.dumps(versions))
          EOF
          python script.py >> $GITHUB_OUTPUT
      - run: echo "${{ steps.set-nim-versions.outputs.NIMVERSIONS }}"

  specific:
    needs:
      - matrix_prep
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: true
      matrix:
        os: 
        # - ubuntu-latest
        # - macOS-13
        - windows-latest
        nim: ${{ fromJson(needs.matrix_prep.outputs.nimversions) }}
        exclude:
        - os: ubuntu-latest
          nim: git:v1.4.8
        - os: ubuntu-latest
          nim: sourcetar:https://github.com/nim-lang/nightlies/releases/download/latest-version-1-4/source.tar.xz
    steps:
      - uses: actions/checkout@v1
      - uses: ./
        with:
          version: ${{ matrix.nim }}
      - run: nim -v
      - run: nimble -v
      - name: Test
        run: nim c -r sample.nim
      - name: Install sample project
        shell: bash
        run: |
          set -xe
          cd .github/workflows/sampleproj
          nimble install --verbose -y
      - name: Check sample project path
        shell: bash
        run: |
          set -xe
          nimble path sampleproj
      - name: Make installed script executable
        shell: bash
        run: |
          # I don't know why installed stubs are no longer executable on Windows :(
          set -xe
          if [ -d "/c/Users/runneradmin/.nimble/bin" ]; then
            chmod u+x /c/Users/runneradmin/.nimble/bin/*
          fi
      - name: Run installed executable
        shell: bash
        run: |
          set -xe
          echo $PATH
          hello
          
  